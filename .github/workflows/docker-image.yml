name: Push to Docker registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.set-matrix.outputs.python_versions }}
      debian: ${{ steps.set-matrix.outputs.debian_versions }}
    steps:
      - uses: actions/checkout@v3
      - name: grab python/debian version from directory structure
        id: set-matrix
        run: |
          python_list=$(ls -d */ | awk -F- '{ print $1 }' | sort | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=python_versions::${python_list}"
          debian_list=$(ls -d */ | awk -F- '{ print $2 }' | sort | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=debian_versions::${debian_list}"
  build-image:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(needs.set-matrix.outputs.python) }}
        debian: ${{ fromJson(needs.set-matrix.outputs.debian) }}
    steps:
    - uses: actions/checkout@v3
    - name: Login to docker hub
      uses: actions-hub/docker/login@master
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Install QEMU
      run: sudo apt update && sudo apt install -y qemu qemu-user-static qemu-user binfmt-support
    - name: Setup for QEMU
      run: sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Build image
      run: docker build . --file ${{ matrix.python }}-${{ matrix.debian }}-build/Dockerfile.arm32v7 --tag mshrh/onnx-raspberry-pi-3:${{ matrix.python }}-${{ matrix.debian }}-build
    - name: Publish image to Dockerhub
      uses: actions-hub/docker@master
      with:
        args: push mshrh/onnx-raspberry-pi-3:${{ matrix.python }}-${{ matrix.debian }}-build
